/*
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2
*/

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int count=0;
        int element=0;
        for(int i=0;i<nums.size();i++){
            if(element==0||element==nums[i]){
                element=nums[i];
                count++;
            }
            else if(element!=0&&count!=0){
                count--;
            }
            else if(element!=0&&count==0){
                element=nums[i];
                count++;
            }
        }
        return element;
    }
};
